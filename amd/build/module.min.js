define("block_quizonepagepaginate/module", ["exports"], (function (_exports) {
    Object.defineProperty(_exports, "__esModule", { value: !0 }), _exports.init = void 0;
    /**
       * JS for this plugin.
       *
       * @copyright   IntegrityAdvocate.com
       * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
       */
    class block_quizonepagepaginate{constructor(t){const e=this,o=e.constructor.name+".constructor";if(e.shouldUseThisBlockJs()){if(isNaN(t))throw new Error(o+"::Invalid value passed for param questionsperpage");e.questionsperpage=parseInt(t),e.firstQuestionToShow=0,e.eltQuestionsSelector="#page-mod-quiz-attempt #responseform .que",e.eltQuizFinishAttemptButtonSelector="#responseform .submitbtns .mod_quiz-next-nav",e.eltBqoppButtonPrev=e.constructor.name+"-prev",e.eltBqoppButtonNext=e.constructor.name+"-next",e.arrQuestions=[]}}run(){const t=this;t.constructor.name;if(!t.shouldUseThisBlockJs())return;t.getAllQuestions(),t.addNextPrevButtons(),window.addEventListener("hashchange",t.handleAnchorChange);const e=t.getAnchorQuestionIndex(document.URL);e>=0&&(t.firstQuestionToShow=e),t.hideShowQuestions(t.firstQuestionToShow,t.questionsperpage)}shouldUseThisBlockJs(){const t=this;t.constructor.name;return void 0!==t.shouldUseThisBlockJsVal||(t.shouldUseThisBlockJsVal="page-mod-quiz-attempt"===document.body.id),t.shouldUseThisBlockJsVal}getAnchorQuestionIndex(t=""){const e=this;e.constructor.name;let o=-1;const n=e.getAnchor(t);if(!n||n.length<12)return o;const s=e.getAnchorQuestionNr(n);return s?(o=e.findQuestionIndexFromQuestionNr(s),o):o}getAnchor(t=""){let e=t.split("#")[1];return e||""}getAnchorQuestionNr(t=""){this.constructor.name;let e="";if(t&&t.length>2){const o=t.match(/(question-\d+-\d+)/);o&&(e=o[1])}return e}findQuestionIndexFromQuestionNr(t=""){const e=this,o=e.constructor.name+".findQuestionIndexFromQuestionNr";let n=-1;return t?e.arrQuestions.length<1?(window.console.log(o+"::arrQuestions is empty so return not found"),n):(e.arrQuestions.forEach(((e,o)=>{e.id!==t||(n=o)})),n):(window.console.log(o+"::Invalid value passed for param questionNr so return not found"),n)}getAllQuestions(){const t=this;t.constructor.name;t.arrQuestions=document.querySelectorAll(t.eltQuestionsSelector)}hideShowQuestions(t=0,e){const o=M.block_quizonepagepaginate,n=(o.constructor.name,t+e);let s=0;o.arrQuestions.forEach(((e,r)=>{r>=t&&r<n&&s<o.questionsperpage?(o.setDisplayVal(e,"block"),s++):o.setDisplayVal(e,"none")}))}scrollToQuestion(){document.querySelector("#responseform").scrollIntoView({behavior:"smooth"})}setDisplayVal(t,e){t.style.display=e}addNextPrevButtons(){const t=this,e=t.constructor.name+".addNextPrevButtons",o=document.querySelector(t.eltQuizFinishAttemptButtonSelector);if(null===o)throw new Error(e+"::No button found to clone");const n=[{key:"previous",component:"core"},{key:"next",component:"core"}];require(["core/str"],(function(e){e.get_strings(n).then((function(e){t.addPrevNextButton(o,"prev",e).addEventListener("click",t.buttonClickedPrev);t.addPrevNextButton(o,"next",e).addEventListener("click",t.buttonClickedNext)}))}))}addPrevNextButton(t,e,o){const n=M.block_quizonepagepaginate,s=(n.constructor.name,t.cloneNode()),r="prev"===e,i=r?n.eltBqoppButtonPrev:n.eltBqoppButtonNext,u=o[r?0:1];return s.setAttribute("id",i),s.setAttribute("class",s.getAttribute("class").replace("btn-primary","btn-secondary")),s.setAttribute("name",i),s.setAttribute("type",i),s.setAttribute("value",u),s.setAttribute("data-initial-value",u),s.removeAttribute("disabled"),t.parentNode.insertBefore(s,t)}buttonClickedPrev(){const t=M.block_quizonepagepaginate;t.constructor.name;t.triggerAutosave(),t.updateVisibleQuestionRange(!1),t.hideShowQuestions(t.firstQuestionToShow,t.questionsperpage),t.scrollToQuestion()}buttonClickedNext(){const t=M.block_quizonepagepaginate;t.constructor.name;t.triggerAutosave(),t.updateVisibleQuestionRange(!0),t.hideShowQuestions(t.firstQuestionToShow,t.questionsperpage),t.scrollToQuestion()}triggerAutosave(){const t=M.block_quizonepagepaginate.constructor.name+".triggerAutosave";try{M.mod_quiz.autosave.save_changes()}catch(e){window.console.log(t+"::autosave is disabled")}}updateVisibleQuestionRange(t=!0){const e=M.block_quizonepagepaginate,o=e.constructor.name+".updateVisibleQuestionRange",n=e.questionsperpage,s=e.arrQuestions.length;if(t){const t=e.firstQuestionToShow+n;e.firstQuestionToShow=t+n<s?t:s-n}else{const t=e.firstQuestionToShow-n;window.console.log(o+"::Proposed start of the next set of questions=",t),e.firstQuestionToShow=t<0?0:t}}handleAnchorChange(t){const e=M.block_quizonepagepaginate,o=(e.constructor.name,t.target||t.srcElement);let n="";if(e.isWindowObj(o)&&(n=window.location.href),n.length<1){if(!o.closest("#mod_quiz_navblock"))return;const t=o.closest("a.qnbutton");if(!t)return;n=t.href}if(n.length<1)return;const s=e.getAnchorQuestionIndex(n);s>=0&&(e.firstQuestionToShow=s),e.hideShowQuestions(e.firstQuestionToShow,e.questionsperpage)}isWindowObj(t){return t&&t.document&&t.location&&t.alert&&t.setInterval}}
    _exports.init = questionsperpage => {const e="block_quizonepagepaginate::init";!1&&window.console.log(e+"::Started with questionsperpage="+questionsperpage);try{M.block_quizonepagepaginate=new block_quizonepagepaginate(questionsperpage),M.block_quizonepagepaginate.run()}catch(e){window.console.error(e)}}
}));

//# sourceMappingURL=module.min.js.map