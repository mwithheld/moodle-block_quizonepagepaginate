define("block_quizonepagepaginate/module", ["exports"], (function (_exports) {
    Object.defineProperty(_exports, "__esModule", { value: !0 }), _exports.init = void 0;
    /**
       * JS for this plugin.
       *
       * @copyright   IntegrityAdvocate.com
       * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
       */
    class block_quizonepagepaginate{constructor(e){const t=this,o=t.constructor.name+".constructor";if(t.shouldUseThisBlockJs()){if(isNaN(e))throw new Error(o+"::Invalid value passed for param questionsperpage");t.questionsperpage=parseInt(e),t.firstQuestionToShow=0,t.eltQuestionsSelector="#page-mod-quiz-attempt #responseform .que",t.eltQuizFinishAttemptButtonSelector="#responseform .submitbtns .mod_quiz-next-nav",t.eltBqoppButtonPrev=t.constructor.name+"-prev",t.eltBqoppButtonNext=t.constructor.name+"-next",t.arrQuestions=[]}}run(){const e=this;e.constructor.name;if(!e.shouldUseThisBlockJs())return;e.getAllQuestions(),e.addNextPrevButtons(),window.addEventListener("hashchange",e.handleAnchorChange);const t=e.getAnchorQuestionIndex(document.URL);t>=0&&(e.firstQuestionToShow=t),e.hideShowQuestions(e.firstQuestionToShow,e.questionsperpage)}shouldUseThisBlockJs(){const e=this;e.constructor.name;return void 0!==e.shouldUseThisBlockJsVal||(e.shouldUseThisBlockJsVal="page-mod-quiz-attempt"===document.body.id),e.shouldUseThisBlockJsVal}getAnchorQuestionIndex(e=""){const t=this;t.constructor.name;let o=-1;const n=t.getAnchor(e);if(!n||n.length<12)return o;const s=t.getAnchorQuestionNr(n);return s?(o=t.findQuestionIndexFromQuestionNr(s),o):o}getAnchor(e=""){let t=e.split("#")[1];return t||""}getAnchorQuestionNr(e=""){this.constructor.name;let t="";if(e&&e.length>2){const o=e.match(/(question-\d+-\d+)/);o&&(t=o[1])}return t}findQuestionIndexFromQuestionNr(e=""){const t=this,o=t.constructor.name+".findQuestionIndexFromQuestionNr";let n=-1;return e?t.arrQuestions.length<1?(window.console.log(o+"::arrQuestions is empty so return not found"),n):(t.arrQuestions.forEach(((t,o)=>{t.id!==e||(n=o)})),n):(window.console.log(o+"::Invalid value passed for param questionNr so return not found"),n)}getAllQuestions(){const e=this;e.constructor.name;e.arrQuestions=document.querySelectorAll(e.eltQuestionsSelector)}hideShowQuestions(e=0,t){const o=M.block_quizonepagepaginate,n=o.constructor.name+".hideShowQuestions";window.console.log(n+"::Started with start=; length=",e,t);const s=e+t;let r=0;o.arrQuestions.forEach(((t,i)=>{window.console.log(n+"::Looking at index=; elt=",i,t),i>=e&&i<s&&r<o.questionsperpage?(window.console.log(n+"::Show this elt",t),t.classList.remove("quizonepage-hidden"),r++):(window.console.log(n+"::Hide this elt",t),t.classList.add("quizonepage-hidden"))}))}scrollToQuestion(){document.querySelector("#responseform").scrollIntoView({behavior:"smooth"})}addNextPrevButtons(){const e=this,t=e.constructor.name+".addNextPrevButtons",o=document.querySelector(e.eltQuizFinishAttemptButtonSelector);if(null===o)throw new Error(t+"::No button found to clone");const n=[{key:"previous",component:"core"},{key:"next",component:"core"}];require(["core/str"],(function(t){t.get_strings(n).then((function(t){e.addPrevNextButton(o,"prev",t).addEventListener("click",e.buttonClickedPrev);e.addPrevNextButton(o,"next",t).addEventListener("click",e.buttonClickedNext)}))}))}addPrevNextButton(e,t,o){const n=M.block_quizonepagepaginate,s=(n.constructor.name,e.cloneNode()),r="prev"===t,i=r?n.eltBqoppButtonPrev:n.eltBqoppButtonNext,u=o[r?0:1];return s.setAttribute("id",i),s.setAttribute("class",s.getAttribute("class").replace("btn-primary","btn-secondary")),s.setAttribute("name",i),s.setAttribute("type",i),s.setAttribute("value",u),s.setAttribute("data-initial-value",u),s.removeAttribute("disabled"),e.parentNode.insertBefore(s,e)}buttonClickedPrev(){const e=M.block_quizonepagepaginate;e.constructor.name;e.triggerAutosave(),e.updateVisibleQuestionRange(!1),e.hideShowQuestions(e.firstQuestionToShow,e.questionsperpage),e.scrollToQuestion()}buttonClickedNext(){const e=M.block_quizonepagepaginate;e.constructor.name;e.triggerAutosave(),e.updateVisibleQuestionRange(!0),e.hideShowQuestions(e.firstQuestionToShow,e.questionsperpage),e.scrollToQuestion()}triggerAutosave(){const e=M.block_quizonepagepaginate.constructor.name+".triggerAutosave";try{M.mod_quiz.autosave.save_changes()}catch(t){window.console.log(e+"::autosave is disabled")}}updateVisibleQuestionRange(e=!0){const t=M.block_quizonepagepaginate,o=t.constructor.name+".updateVisibleQuestionRange",n=t.questionsperpage,s=t.arrQuestions.length;if(e){const e=t.firstQuestionToShow+n;t.firstQuestionToShow=e+n<s?e:s-n}else{const e=t.firstQuestionToShow-n;window.console.log(o+"::Proposed start of the next set of questions=",e),t.firstQuestionToShow=e<0?0:e}}handleAnchorChange(e){const t=M.block_quizonepagepaginate,o=(t.constructor.name,e.target||e.srcElement);let n="";if(t.isWindowObj(o)&&(n=window.location.href),n.length<1){if(!o.closest("#mod_quiz_navblock"))return;const e=o.closest("a.qnbutton");if(!e)return;n=e.href}if(n.length<1)return;const s=t.getAnchorQuestionIndex(n);s>=0&&(t.firstQuestionToShow=s),t.hideShowQuestions(t.firstQuestionToShow,t.questionsperpage)}isWindowObj(e){return e&&e.document&&e.location&&e.alert&&e.setInterval}}
    _exports.init = questionsperpage => {const e="block_quizonepagepaginate::init";!1&&window.console.log(e+"::Started with questionsperpage="+questionsperpage);try{M.block_quizonepagepaginate=new block_quizonepagepaginate(questionsperpage),M.block_quizonepagepaginate.run()}catch(e){window.console.error(e)}}
}));

//# sourceMappingURL=module.min.js.map