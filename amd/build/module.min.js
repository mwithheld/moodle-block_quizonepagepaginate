define("block_quizonepagepaginate/module",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;
/**
   * JS for this plugin.
   *
   * @copyright   IntegrityAdvocate.com
   * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
class block_quizonepagepaginate{constructor(questionsperpage){this.constructor.name;this.questionsperpage=questionsperpage,this.firstQuestionToShow=0,this.eltQuestionsSelector="#page-mod-quiz-attempt #responseform .que",this.eltQuizFinishAttemptButtonSelector="#responseform .submitbtns .mod_quiz-next-nav",this.arrQuestions=[]}run(){let self=this;self.constructor.name;self.getAllQuestions(),self.hideShowQuestions(self.firstQuestionToShow,self.questionsperpage),self.addNextPrevButtons()}getAllQuestions(){let self=this;self.constructor.name;self.arrQuestions=document.querySelectorAll(self.eltQuestionsSelector)}hideShowQuestions(){let first=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,length=arguments.length>1?arguments[1]:void 0,self=this;const FXN=self.constructor.name+".hideShowQuestions";window.console.log(FXN+"::Started with start=; length=",first,length);const last=first+length;self.arrQuestions.forEach((function(elt,index){window.console.log(FXN+"::Looking at index=; elt=",index,elt),index>=first&&index<last?(window.console.log(FXN+"::Show this elt"),self.setDisplayVal(elt,"block")):(window.console.log(FXN+"::Hide this elt"),self.setDisplayVal(elt,"none"))}))}setDisplayVal(elt,displayVal){elt.style.display!==displayVal&&(elt.style.display=displayVal)}addNextPrevButtons(){let self=this;const FXN=self.constructor.name+".addNextPrevButtons";window.console.log(FXN+"::Started with self.eltQuizFinishAttemptButtonSelector=",self.eltQuizFinishAttemptButtonSelector);let eltCloneSource=document.querySelector(self.eltQuizFinishAttemptButtonSelector);const stringsToRetrieve=[{key:"previous",component:"core"},{key:"next",component:"core"}];require(["core/str"],(function(str){window.console.log(FXN+".require::Started with stringsToRetrieve=",stringsToRetrieve),str.get_strings(stringsToRetrieve).then((function(stringsRetrieved){window.console.log(FXN+".require.get_strings.then::Started with stringsRetrieved=",stringsRetrieved),self.addPrevNextButton(eltCloneSource,"prev",stringsRetrieved).addEventListener("click",(function(){window.console.log("Clicked the prev button")})),self.addPrevNextButton(eltCloneSource,"next",stringsRetrieved).addEventListener("click",(function(){window.console.log("Clicked the next button")}))}))}))}addPrevNextButton(eltCloneSource,nextorprev,strings){let eltClone=eltCloneSource.cloneNode();const prevval=self.constructor.name+"-"+nextorprev,prevdisplay=strings["prev"==nextorprev?0:1];return eltClone.setAttribute("id",prevval),eltClone.setAttribute("class",eltClone.getAttribute("class").replace("btn-primary","btn-secondary")),eltClone.setAttribute("name",prevval),eltClone.setAttribute("type",prevval),eltClone.setAttribute("value",prevdisplay),eltClone.setAttribute("data-initial-value",prevdisplay),eltCloneSource.parentNode.insertBefore(eltClone,eltCloneSource)}}_exports.init=questionsperpage=>{M.block_quizonepagepaginate=new block_quizonepagepaginate(questionsperpage),M.block_quizonepagepaginate.run()}}));

//# sourceMappingURL=module.min.js.map