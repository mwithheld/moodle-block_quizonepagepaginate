define("block_quizonepagepaginate/module",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;
/**
   * JS for this plugin.
   *
   * @copyright   IntegrityAdvocate.com
   * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
class block_quizonepagepaginate{constructor(questionsperpage){const FXN=this.constructor.name+".constructor";if(isNaN(questionsperpage))throw FXN+"::Invalid value passed for param questionsperpage";this.questionsperpage=parseInt(questionsperpage),this.firstQuestionToShow=0,this.eltQuestionsSelector="#page-mod-quiz-attempt #responseform .que",this.eltQuizFinishAttemptButtonSelector="#responseform .submitbtns .mod_quiz-next-nav",this.eltBqoppButtonPrev=this.constructor.name+"-prev",this.eltBqoppButtonNext=this.constructor.name+"-next",this.arrQuestions=[]}run(){let self=this;self.constructor.name;self.getAllQuestions(),self.hideShowQuestions(self.firstQuestionToShow,self.questionsperpage),self.addNextPrevButtons()}getAllQuestions(){let self=this;self.constructor.name;self.arrQuestions=document.querySelectorAll(self.eltQuestionsSelector)}hideShowQuestions(){let first=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,length=arguments.length>1?arguments[1]:void 0,self=M.block_quizonepagepaginate;self.constructor.name;const last=first+length;let countVisible=0;self.arrQuestions.forEach((function(elt,index){index>=first&&index<last&&countVisible<self.questionsperpage?(self.setDisplayVal(elt,"block"),countVisible++):self.setDisplayVal(elt,"none")}))}setDisplayVal(elt,displayVal){elt.style.display=displayVal}addNextPrevButtons(){let self=this;self.constructor.name;let eltCloneSource=document.querySelector(self.eltQuizFinishAttemptButtonSelector);const stringsToRetrieve=[{key:"previous",component:"core"},{key:"next",component:"core"}];require(["core/str"],(function(str){str.get_strings(stringsToRetrieve).then((function(stringsRetrieved){self.addPrevNextButton(eltCloneSource,"prev",stringsRetrieved).addEventListener("click",self.buttonClickedPrev),self.addPrevNextButton(eltCloneSource,"next",stringsRetrieved).addEventListener("click",self.buttonClickedNext)}))}))}addPrevNextButton(eltCloneSource,nextorprev,strings){let eltClone=eltCloneSource.cloneNode();const prevval="prev"==nextorprev?self.eltBqoppButtonPrev:self.eltBqoppButtonNext,prevdisplay=strings["prev"==nextorprev?0:1];return eltClone.setAttribute("id",prevval),eltClone.setAttribute("class",eltClone.getAttribute("class").replace("btn-primary","btn-secondary")),eltClone.setAttribute("name",prevval),eltClone.setAttribute("type",prevval),eltClone.setAttribute("value",prevdisplay),eltClone.setAttribute("data-initial-value",prevdisplay),eltCloneSource.parentNode.insertBefore(eltClone,eltCloneSource)}buttonClickedPrev(){let self=M.block_quizonepagepaginate;self.constructor.name;self.updateVisibleQuestionRange(!1),self.hideShowQuestions(self.firstQuestionToShow,self.questionsperpage)}buttonClickedNext(){let self=M.block_quizonepagepaginate;self.constructor.name;self.updateVisibleQuestionRange(!0),self.hideShowQuestions(self.firstQuestionToShow,self.questionsperpage)}updateVisibleQuestionRange(){let getNextSet=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],self=M.block_quizonepagepaginate;const FXN=self.constructor.name+".updateVisibleQuestionRange";let lengthToShow=self.questionsperpage,lastOfAllQs=self.arrQuestions.length;if(getNextSet){let proposedStart=self.firstQuestionToShow+lengthToShow;false,self.firstQuestionToShow=proposedStart+lengthToShow<lastOfAllQs?proposedStart:lastOfAllQs-lengthToShow}else{let proposedStart=self.firstQuestionToShow-lengthToShow;window.console.log(FXN+"::Proposed start of the next set of questions=",proposedStart),self.firstQuestionToShow=proposedStart<0?0:proposedStart}}}_exports.init=questionsperpage=>{try{M.block_quizonepagepaginate=new block_quizonepagepaginate(questionsperpage),M.block_quizonepagepaginate.run()}catch(e){window.console.log.error(e)}}}));

//# sourceMappingURL=module.min.js.map